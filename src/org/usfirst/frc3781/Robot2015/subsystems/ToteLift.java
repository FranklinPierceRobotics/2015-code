// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3781.Robot2015.subsystems;

import org.usfirst.frc3781.Robot2015.RobotMap;
import org.usfirst.frc3781.Robot2015.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ToteLift extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController toteLift = RobotMap.toteLiftToteLift;
    DigitalInput toteBottom = RobotMap.toteLiftToteBottom;
    Compressor mainCompressor = RobotMap.toteLiftMainCompressor;
    DoubleSolenoid toteLevelerPiston = RobotMap.toteLiftToteLevelerPiston;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void toteLiftRaise ()
    {
    	this.toteLift.set(1);	
    }
    public void toteLiftLower ()
    {
    	this.toteLift.set(-1);	
    }
    public void toteLiftSet(double toteLiftSpeed)
    {
    	this.toteLift.set(toteLiftSpeed);
    }
    
    public boolean isToteLiftOnBottom()
    {
    	return !this.toteBottom.get(); //Opposite for some reason, so "not()" it to correct this
    }
    
    public void extendToteLevelerPiston()
    {
    	this.toteLevelerPiston.set(DoubleSolenoid.Value.kForward);
    }
    public void retractToteLevelerPiston()
    {
    	this.toteLevelerPiston.set(DoubleSolenoid.Value.kReverse);
    }
    public void restToteLevelerPiston()
    {
    	this.toteLevelerPiston.set(DoubleSolenoid.Value.kOff);
    }
    public void setToteLevelerPiston(DoubleSolenoid.Value value)
    {
    	this.toteLevelerPiston.set(value);
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
}

